{"version":3,"sources":["Login.js","TopTrack.js","TopArtist.js","DropDownTracks.js","DropDownArtists.js","UserIcon.js","GeneratePlaylist.js","UniqueMusic.js","Footer.js","HomePage.js","useAuth.js","App.js","index.js"],"names":["Login","Container","fluid","className","src","alt","href","autoPlay","loop","muted","playsInline","type","target","rel","TopTrack","track","Tooltip","componentsProps","tooltip","sx","bgcolor","alpha","color","minWidth","title","Fragment","Typography","p","textAlign","index","style","artist","albumName","trackNumber","totalTracks","popularity","releaseDate","arrow","uri","albumUrl","substring","name","genres","join","image","DropDownMenu","changeSelect","onChange","value","DropDownArtists","handleChangeArtist","UserIcon","user","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","id","undefined","onClick","event","currentTarget","textTransform","mr","mt","mb","ml","Menu","onClose","MenuListProps","MenuItem","textDecoration","window","GeneratePlaylist","handlePlaylistBtn","pickedArtists","handleRefresh","map","slice","maxWidth","pb","pt","fontSize","variant","size","m","backgroundColor","UniqueMusic","sortedTracks","sortedArtists","sort","a","b","handleLogout","Footer","spotifyApi","SpotifyWebApi","clientId","HomePage","accessToken","code","useState","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","then","res","data","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","topTracks","setTopTracks","topArtists","setTopArtists","trackDuration","setTrackDuration","artistsDuration","setArtistsDuration","userDetails","setUserDetails","screenWidth","screen","width","pickedArtistsIds","setPickedArtistsIds","setPickedArtists","playlistId","setPlaylistId","recommendations","setRecommendations","setSortedTracks","setSortedArtists","setOpen","secondTopArtist","topArtist","generateRandom","min","max","difference","rand","Math","random","floor","document","addEventListener","tracksExpandBtn","querySelector","e","expandTracksContent","classList","toggle","contains","maxHeight","scrollHeight","innerHTML","stopImmediatePropagation","artistsExpandBtn","expandArtistsContent","getMyTopTracks","limit","time_range","body","items","largestAlbumImage","album","images","reduce","largest","height","date","Date","release_date","artists","url","track_number","indexOf","album_type","toLocaleDateString","year","month","day","total_tracks","err","console","log","getMyTopArtists","getMe","display_name","temp","tempIds","length","randomArtist","push","split","addTracks","addTracksToPlaylist","statusCode","dropDownTracks","dropDownArtists","createPlaylist","description","public","getRecommendations","min_energy","seed_artists","min_popularity","tracks","Snackbar","anchorOrigin","vertical","horizontal","message","ContentProps","background","URLSearchParams","search","get","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d73d6ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst AUTH_URL =\r\n  \"https://accounts.spotify.com/authorize?client_id=b256d996ac324a3fa6765ae4287a195f&response_type=code&redirect_uri=https://topify-web.herokuapp.com/&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-read-recently-played%20user-read-playback-state%20user-top-read%20playlist-modify-public%20playlist-modify-private\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Container fluid className=\"login-container\">\r\n      <div className=\"descript\">\r\n        <div className=\"topify-title\">\r\n          <img src=\"./topify-logo.svg\" alt=\"logo-svg\" className=\"topify-logo\" />\r\n          <h1>Topify</h1>\r\n        </div>\r\n        <h3> Find out your most listened Tracks and Artists on Spotify.</h3>\r\n        <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\r\n          <i className=\"fa fa-spotify\" aria-hidden=\"true\"></i> Connect with\r\n          Spotify\r\n        </a>\r\n      </div>\r\n      <div className=\"video-container\">\r\n        <div>\r\n          <video autoPlay loop muted playsInline>\r\n            <source src=\"./Videos/topify.mp4\" type=\"video/mp4\" />\r\n            Sorry, your browser doesn't support embedded videos.\r\n          </video>\r\n        </div>\r\n        <p>\r\n          You can disconnect Topify from your Spotify account{\" \"}\r\n          <a\r\n            href=\"https://www.spotify.com/us/account/apps/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            here\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <footer>\r\n        Made out of love for Music &amp; Spotify. Created by{\" \"}\r\n        <a\r\n          href=\"https://github.com/hemani-gajjar\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Hemani\r\n        </a>\r\n        , powered by Spotify\r\n      </footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { alpha } from \"@mui/material\";\r\n\r\nexport default function TopTrack({ track }) {\r\n  return (\r\n    <Tooltip\r\n      componentsProps={{\r\n        tooltip: {\r\n          sx: {\r\n            bgcolor: alpha(\"#3c3f5f\", 0.98),\r\n            \"& .MuiTooltip-arrow\": {\r\n              color: alpha(\"#3c3f5f\", 0.98),\r\n            },\r\n            minWidth: 350,\r\n          },\r\n        },\r\n      }}\r\n      title={\r\n        <React.Fragment>\r\n          <Typography\r\n            sx={{\r\n              p: 2,\r\n              minWidth: 300,\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Typography color=\"#FBFBFB\">\r\n              {track.index} {track.title}\r\n            </Typography>\r\n            {track.type === \"SINGLE\" ? (\r\n              <>\r\n                <Typography\r\n                  color=\"#FBFBFB\"\r\n                  sx={{\r\n                    minWidth: 300,\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Single By{\" \"}\r\n                  <strong>\r\n                    <span style={{ color: \"darkgrey\" }}>{track.artist}</span>\r\n                  </strong>\r\n                </Typography>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Typography\r\n                  color=\"#FBFBFB\"\r\n                  sx={{\r\n                    minWidth: 300,\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Track By{\" \"}\r\n                  <strong>\r\n                    <span style={{ color: \"darkgrey\" }}>{track.artist}</span>\r\n                  </strong>\r\n                </Typography>\r\n                <Typography color=\"#FBFBFB\">\r\n                  Appears on the album\r\n                  <span style={{ color: \"darkgrey\" }}>\r\n                    {\" \"}\r\n                    <strong>{track.albumName}</strong>{\" \"}\r\n                  </span>\r\n                </Typography>\r\n                <Typography color=\"#FBFBFB\">\r\n                  Track No. {track.trackNumber} of {track.totalTracks}\r\n                </Typography>\r\n              </>\r\n            )}\r\n\r\n            <Typography color=\"#FBFBFB\">\r\n              Popularity on Spotify - {track.popularity}\r\n            </Typography>\r\n\r\n            <Typography color=\"#FBFBFB\">\r\n              Released on {track.releaseDate}\r\n            </Typography>\r\n          </Typography>\r\n        </React.Fragment>\r\n      }\r\n      arrow\r\n    >\r\n      <div className=\"top-track-card\">\r\n        <a href={track.uri}>\r\n          <img src={track.albumUrl} alt=\"track-cover\" />\r\n        </a>\r\n        <div className=\"title\">{track.title.substring(0, 20)}</div>\r\n        <div className=\"text-mute\">{track.artist}</div>\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { alpha } from \"@mui/material\";\r\n\r\nexport default function TopTrack({ artist }) {\r\n  return (\r\n    <Tooltip\r\n      componentsProps={{\r\n        tooltip: {\r\n          sx: {\r\n            bgcolor: alpha(\"#3c3f5f\", 0.98),\r\n            \"& .MuiTooltip-arrow\": {\r\n              color: alpha(\"#3c3f5f\", 0.98),\r\n            },\r\n            minWidth: 350,\r\n          },\r\n        },\r\n      }}\r\n      title={\r\n        <React.Fragment>\r\n          <Typography\r\n            sx={{\r\n              p: 2,\r\n              minWidth: 300,\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Typography color=\"#FBFBFB\">\r\n              {artist.index} {artist.name}\r\n            </Typography>\r\n\r\n            <Typography\r\n              color=\"#FBFBFB\"\r\n              sx={{\r\n                minWidth: 300,\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Genres -{\" \"}\r\n              <strong>\r\n                <span style={{ color: \"darkgrey\" }}>\r\n                  {artist.genres.join(\", \")}\r\n                </span>\r\n              </strong>\r\n            </Typography>\r\n\r\n            <Typography color=\"#FBFBFB\">\r\n              Popularity on Spotify - {artist.popularity}\r\n            </Typography>\r\n          </Typography>\r\n        </React.Fragment>\r\n      }\r\n      arrow\r\n    >\r\n      <div className=\"top-artist-card\">\r\n        <a href={artist.uri}>\r\n          <img src={artist.image} alt=\"artist\" className=\"top-artist-img\" />\r\n        </a>\r\n        <div className=\"title\">{artist.name}</div>\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DropDownMenu({ changeSelect }) {\r\n  return (\r\n    <div className=\"drop-down-container\" onChange={changeSelect}>\r\n      <select name=\"duration\" className=\"drop-down-tracks\">\r\n        <option value=\"long_term\">all time</option>\r\n        <option value=\"medium_term\">last 6 months</option>\r\n        <option value=\"short_term\">last month</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DropDownArtists({ handleChangeArtist }) {\r\n  return (\r\n    <div className=\"drop-down-container\" onChange={handleChangeArtist}>\r\n      <select name=\"duration\" className=\"drop-down-artists\">\r\n        <option value=\"short_term\">last month</option>\r\n        <option value=\"long_term\">all time</option>\r\n        <option value=\"medium_term\">last 6 months</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nexport default function UserIcon({ user }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    window.open(\" https://accounts.spotify.com/en/logout\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"userIcon\">\r\n      <Button\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n        sx={{\r\n          textTransform: \"none\",\r\n          color: \"#eeeeee\",\r\n          mr: 8,\r\n          mt: 1,\r\n          mb: 0,\r\n          ml: 0,\r\n        }}\r\n      >\r\n        <img src={user.image} alt=\"user\" className=\"user-profile-img\" />\r\n\r\n        {user.name}\r\n      </Button>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n        className=\"menu-profile\"\r\n      >\r\n        <a\r\n          href=\"https://github.com/hemani-gajjar/Topify#usage\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <MenuItem\r\n            sx={{ textDecoration: \"none\", color: \"black\" }}\r\n            onClick={handleClose}\r\n          >\r\n            About Topify{\" \"}\r\n          </MenuItem>{\" \"}\r\n        </a>\r\n        <a href=\"/\">\r\n          <MenuItem\r\n            sx={{ textDecoration: \"none\", color: \"black\" }}\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </MenuItem>\r\n        </a>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport RefreshRoundedIcon from \"@mui/icons-material/RefreshRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { alpha } from \"@mui/material\";\r\n\r\nexport default function GeneratePlaylist({\r\n  handlePlaylistBtn,\r\n  pickedArtists,\r\n  handleRefresh,\r\n}) {\r\n  return (\r\n    <div className=\"generate-playlist-container\">\r\n      <h1>Discover Music based on your taste</h1>\r\n      <div className=\"generate-playlist\">\r\n        <div className=\"left\">\r\n          <div className=\"picked-artists\">\r\n            <div className=\"row\">\r\n              {pickedArtists.map((artist) => (\r\n                <div className=\"col-sm padding-0\" key={artist.index}>\r\n                  <div className=\"artist-card\">\r\n                    <a href={artist.uri}>\r\n                      <img src={artist.image} alt=\"picked-artist\"></img>\r\n                    </a>\r\n                    <p>{artist.name}</p>\r\n                    <p>\r\n                      <strong>\r\n                        <span style={{ color: \"darkgrey\" }}>\r\n                          {artist.genres.slice(0, 2).join(\", \")}\r\n                        </span>\r\n                      </strong>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n          <Typography\r\n            sx={{\r\n              maxWidth: 320,\r\n              pb: 3,\r\n              pt: 3,\r\n              fontSize: 22,\r\n              color: \"darkgrey\",\r\n            }}\r\n          >\r\n            <strong>\r\n              {\" \"}\r\n              Generate a mix of recommended tracks based on your top artists\r\n            </strong>\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleRefresh}\r\n            size=\"large\"\r\n            sx={{\r\n              m: 1,\r\n              textTransform: \"none\",\r\n              fontSize: 18,\r\n              backgroundColor: \"#46476d\",\r\n              \":hover\": {\r\n                backgroundColor: \"#353753\",\r\n              },\r\n            }}\r\n          >\r\n            <RefreshRoundedIcon sx={{ mr: 1 }} /> Refresh Artists\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tooltip\r\n        componentsProps={{\r\n          tooltip: {\r\n            sx: {\r\n              bgcolor: alpha(\"#3c3f5f\", 0.98),\r\n              \"& .MuiTooltip-arrow\": {\r\n                color: alpha(\"#3c3f5f\", 0.98),\r\n              },\r\n              minWidth: 350,\r\n            },\r\n          },\r\n        }}\r\n        title={\r\n          <React.Fragment>\r\n            <Typography\r\n              color=\"#FBFBFB\"\r\n              sx={{\r\n                p: 2,\r\n                minWidth: 300,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Generate a playlist in your spotify account with the recommended\r\n              tracks!\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n        arrow\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handlePlaylistBtn}\r\n          sx={{\r\n            m: 1,\r\n            fontSize: 18,\r\n            textTransform: \"none\",\r\n            backgroundColor: \"#46476d\",\r\n            \":hover\": {\r\n              backgroundColor: \"#353753\",\r\n            },\r\n          }}\r\n          size=\"large\"\r\n        >\r\n          Generate Playlist\r\n        </Button>\r\n      </Tooltip>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { alpha } from \"@mui/material\";\r\n\r\nexport default function UniqueMusic({ sortedTracks, sortedArtists }) {\r\n  return (\r\n    <div className=\"unique-music\">\r\n      <div className=\"unique-tracks\">\r\n        <h1>Your most unique tracks</h1>\r\n        <div>\r\n          <div className=\"row\">\r\n            {sortedTracks\r\n              .sort((a, b) =>\r\n                a.popularity > b.popularity\r\n                  ? 1\r\n                  : b.popularity > a.popularity\r\n                  ? -1\r\n                  : 0\r\n              )\r\n              .slice(0, 7)\r\n              .map((track) => (\r\n                <div className=\"col-sm padding-0\" key={track.index}>\r\n                  <Tooltip\r\n                    componentsProps={{\r\n                      tooltip: {\r\n                        sx: {\r\n                          bgcolor: alpha(\"#3c3f5f\", 0.98),\r\n                          \"& .MuiTooltip-arrow\": {\r\n                            color: alpha(\"#3c3f5f\", 0.98),\r\n                          },\r\n                          minWidth: 350,\r\n                        },\r\n                      },\r\n                    }}\r\n                    title={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          sx={{\r\n                            p: 2,\r\n                            minWidth: 300,\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          <Typography color=\"#FBFBFB\">{track.title}</Typography>\r\n                          {track.type === \"SINGLE\" ? (\r\n                            <>\r\n                              <Typography\r\n                                color=\"#FBFBFB\"\r\n                                sx={{\r\n                                  minWidth: 300,\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                Single By{\" \"}\r\n                                <strong>\r\n                                  <span style={{ color: \"darkgrey\" }}>\r\n                                    {track.artist}\r\n                                  </span>\r\n                                </strong>\r\n                              </Typography>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Typography\r\n                                color=\"#FBFBFB\"\r\n                                sx={{\r\n                                  minWidth: 300,\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                Track By{\" \"}\r\n                                <strong>\r\n                                  <span style={{ color: \"darkgrey\" }}>\r\n                                    {track.artist}\r\n                                  </span>\r\n                                </strong>\r\n                              </Typography>\r\n                              <Typography color=\"#FBFBFB\">\r\n                                Appears on the album\r\n                                <span style={{ color: \"darkgrey\" }}>\r\n                                  {\" \"}\r\n                                  <strong>{track.albumName}</strong>{\" \"}\r\n                                </span>\r\n                              </Typography>\r\n                              <Typography color=\"#FBFBFB\">\r\n                                Track No. {track.trackNumber} of{\" \"}\r\n                                {track.totalTracks}\r\n                              </Typography>\r\n                            </>\r\n                          )}\r\n\r\n                          <Typography color=\"#FBFBFB\">\r\n                            Popularity on Spotify - {track.popularity}\r\n                          </Typography>\r\n\r\n                          <Typography color=\"#FBFBFB\">\r\n                            Released on {track.releaseDate}\r\n                          </Typography>\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                    arrow\r\n                  >\r\n                    <div className=\"top-track-card\">\r\n                      <a href={track.uri}>\r\n                        <img src={track.albumUrl} alt=\"track-cover\" />\r\n                      </a>\r\n                      <div className=\"title\">\r\n                        {track.title.substring(0, 20)}\r\n                      </div>\r\n                      <div className=\"text-mute\">{track.artist}</div>\r\n                    </div>\r\n                  </Tooltip>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"unique-artists\">\r\n        <h1>Your most unique artists</h1>\r\n\r\n        <div className=\"row\">\r\n          {sortedArtists\r\n            .sort((a, b) =>\r\n              a.popularity > b.popularity\r\n                ? 1\r\n                : b.popularity > a.popularity\r\n                ? -1\r\n                : 0\r\n            )\r\n            .slice(0, 7)\r\n            .map((artist) => (\r\n              <div className=\"col-sm padding-0\" key={artist.index}>\r\n                <Tooltip\r\n                  componentsProps={{\r\n                    tooltip: {\r\n                      sx: {\r\n                        bgcolor: alpha(\"#3c3f5f\", 0.98),\r\n                        \"& .MuiTooltip-arrow\": {\r\n                          color: alpha(\"#3c3f5f\", 0.98),\r\n                        },\r\n                        minWidth: 350,\r\n                      },\r\n                    },\r\n                  }}\r\n                  title={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        sx={{\r\n                          p: 2,\r\n                          minWidth: 300,\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <Typography color=\"#FBFBFB\">{artist.name}</Typography>\r\n\r\n                        <Typography\r\n                          color=\"#FBFBFB\"\r\n                          sx={{\r\n                            minWidth: 300,\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          Genres -{\" \"}\r\n                          <strong>\r\n                            <span style={{ color: \"darkgrey\" }}>\r\n                              {artist.genres.join(\", \")}\r\n                            </span>\r\n                          </strong>\r\n                        </Typography>\r\n\r\n                        <Typography color=\"#FBFBFB\">\r\n                          Popularity on Spotify - {artist.popularity}\r\n                        </Typography>\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                  arrow\r\n                >\r\n                  <div className=\"top-artist-card\">\r\n                    <a href={artist.uri}>\r\n                      <img\r\n                        src={artist.image}\r\n                        alt=\"artist\"\r\n                        className=\"top-artist-img\"\r\n                      />\r\n                    </a>\r\n                    <div className=\"title\">{artist.name}</div>\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst handleLogout = () => {\r\n  window.open(\" https://accounts.spotify.com/en/logout\");\r\n};\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"homepage-footer\">\r\n      <p>Made out of love for Music &amp; Spotify</p>\r\n      <span>|</span>\r\n      <a\r\n        href=\"https://github.com/hemani-gajjar/Topify#usage\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        About\r\n      </a>\r\n      <span>|</span>\r\n      <a href=\"/\" onClick={handleLogout}>\r\n        Logout\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport useAuth from \"./useAuth\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport TopTrack from \"./TopTrack\";\r\nimport TopArtist from \"./TopArtist\";\r\nimport DropDownTracks from \"./DropDownTracks\";\r\nimport DropDownArtists from \"./DropDownArtists\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport UserIcon from \"./UserIcon\";\r\nimport GeneratePlaylist from \"./GeneratePlaylist\";\r\nimport UniqueMusic from \"./UniqueMusic\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"b256d996ac324a3fa6765ae4287a195f\",\r\n});\r\n\r\nexport default function HomePage({ code }) {\r\n  const accessToken = useAuth(code);\r\n  const [topTracks, setTopTracks] = useState([]);\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [trackDuration, setTrackDuration] = useState(\"long_term\");\r\n  const [artistsDuration, setArtistsDuration] = useState(\"short_term\");\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const screenWidth = window.screen.width;\r\n  const [pickedArtistsIds, setPickedArtistsIds] = useState([]);\r\n  const [pickedArtists, setPickedArtists] = useState([]);\r\n  const [playlistId, setPlaylistId] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [sortedTracks, setSortedTracks] = useState([]);\r\n  const [sortedArtists, setSortedArtists] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const secondTopArtist = topArtists.slice(0, 1).map((artist) => artist.name);\r\n  const topArtist = topArtists.slice(0, 1).map((artist) => artist.name);\r\n\r\n  const getArtistId = (str) => {\r\n    return str.split(\":\")[2];\r\n  };\r\n\r\n  const generateRandom = (min = 0, max = 49) => {\r\n    var difference = max - min;\r\n    var rand = Math.random();\r\n    rand = Math.floor(rand * difference);\r\n    rand = rand + min;\r\n    return rand;\r\n  };\r\n\r\n  //Button Collapse / Expand\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const tracksExpandBtn = document.querySelector(\".expand-btn-tracks\");\r\n    tracksExpandBtn.addEventListener(\"click\", (e) => {\r\n      const expandTracksContent = document.querySelector(\r\n        \".grid-container-tracks\"\r\n      );\r\n\r\n      //stlying on button\r\n      tracksExpandBtn.classList.toggle(\"button-pressed\");\r\n\r\n      if (tracksExpandBtn.classList.contains(\"button-pressed\")) {\r\n        expandTracksContent.style.maxHeight =\r\n          expandTracksContent.scrollHeight + \"px\";\r\n        if (tracksExpandBtn.innerHTML === \"See More\") {\r\n          tracksExpandBtn.innerHTML = \"See Less\";\r\n        }\r\n      } else {\r\n        expandTracksContent.style.maxHeight = 0;\r\n        if (tracksExpandBtn.innerHTML === \"See Less\") {\r\n          tracksExpandBtn.innerHTML = \"See More\";\r\n        }\r\n      }\r\n\r\n      //prevent trigerring click event twice\r\n      e.stopImmediatePropagation();\r\n    });\r\n  });\r\n\r\n  //Button Collapse / Expand\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const artistsExpandBtn = document.querySelector(\".expand-btn-artists\");\r\n    artistsExpandBtn.addEventListener(\"click\", (e) => {\r\n      const expandArtistsContent = document.querySelector(\r\n        \".grid-container-artists\"\r\n      );\r\n      //stlying on button\r\n      artistsExpandBtn.classList.toggle(\"button-pressed\");\r\n\r\n      if (artistsExpandBtn.classList.contains(\"button-pressed\")) {\r\n        expandArtistsContent.style.maxHeight =\r\n          expandArtistsContent.scrollHeight + \"px\";\r\n        if (artistsExpandBtn.innerHTML === \"See More\") {\r\n          artistsExpandBtn.innerHTML = \"See Less\";\r\n        }\r\n      } else {\r\n        expandArtistsContent.style.maxHeight = 0;\r\n        if (artistsExpandBtn.innerHTML === \"See Less\") {\r\n          artistsExpandBtn.innerHTML = \"See More\";\r\n        }\r\n      }\r\n\r\n      //prevent trigerring click event twice\r\n      e.stopImmediatePropagation();\r\n    });\r\n  });\r\n\r\n  function changeSelect() {\r\n    const dropDownTracks = document.querySelector(\".drop-down-tracks\");\r\n    setTrackDuration(dropDownTracks.value);\r\n  }\r\n\r\n  function handleChangeArtist() {\r\n    const dropDownArtists = document.querySelector(\".drop-down-artists\");\r\n    setArtistsDuration(dropDownArtists.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    // Get a User’s Top Tracks\r\n    spotifyApi.getMyTopTracks({ limit: 50, time_range: trackDuration }).then(\r\n      function (data) {\r\n        setTopTracks(\r\n          data.body.items.map(function (track) {\r\n            const largestAlbumImage = track.album.images.reduce(function (\r\n              largest,\r\n              image\r\n            ) {\r\n              if (image.height > largest.height) {\r\n                return image;\r\n              } else {\r\n                return largest;\r\n              }\r\n            },\r\n            track.album.images[0]);\r\n\r\n            var date = new Date(track.album.release_date);\r\n            var options = {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            };\r\n\r\n            return {\r\n              artist: track.artists[0].name,\r\n              title: track.name,\r\n              uri: track.uri,\r\n              albumUrl: largestAlbumImage.url,\r\n              popularity: track.popularity,\r\n              trackNumber: track.track_number,\r\n              index: data.body.items.indexOf(track) + 1,\r\n              type: track.album.album_type,\r\n              albumName: track.album.name,\r\n              releaseDate: date.toLocaleDateString(\"en-US\", options),\r\n              totalTracks: track.album.total_tracks,\r\n            };\r\n          })\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken, trackDuration]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    // Get a User’s Top Artists\r\n    spotifyApi.getMyTopArtists({ limit: 50, time_range: artistsDuration }).then(\r\n      function (data) {\r\n        setTopArtists(\r\n          data.body.items.map(function (artist) {\r\n            const largestAlbumImage = artist.images.reduce(function (\r\n              largest,\r\n              image\r\n            ) {\r\n              if (image.height > largest.height) {\r\n                return image;\r\n              } else {\r\n                return largest;\r\n              }\r\n            },\r\n            artist.images[0]);\r\n\r\n            return {\r\n              name: artist.name,\r\n              popularity: artist.popularity,\r\n              uri: artist.uri,\r\n              image: largestAlbumImage.url,\r\n              index: data.body.items.indexOf(artist) + 1,\r\n              genres: artist.genres,\r\n            };\r\n          })\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken, artistsDuration]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    // Get a User’s Top Tracks of All Time\r\n    spotifyApi.getMyTopTracks({ limit: 50, time_range: \"long_term\" }).then(\r\n      function (data) {\r\n        setSortedTracks(\r\n          data.body.items.map(function (track) {\r\n            const largestAlbumImage = track.album.images.reduce(function (\r\n              largest,\r\n              image\r\n            ) {\r\n              if (image.height > largest.height) {\r\n                return image;\r\n              } else {\r\n                return largest;\r\n              }\r\n            },\r\n            track.album.images[0]);\r\n\r\n            var date = new Date(track.album.release_date);\r\n            var options = {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            };\r\n\r\n            return {\r\n              artist: track.artists[0].name,\r\n              title: track.name,\r\n              uri: track.uri,\r\n              albumUrl: largestAlbumImage.url,\r\n              popularity: track.popularity,\r\n              trackNumber: track.track_number,\r\n              index: data.body.items.indexOf(track) + 1,\r\n              type: track.album.album_type,\r\n              albumName: track.album.name,\r\n              releaseDate: date.toLocaleDateString(\"en-US\", options),\r\n              totalTracks: track.album.total_tracks,\r\n            };\r\n          })\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n\r\n    // Get a User’s Top Artists of all time\r\n    spotifyApi.getMyTopArtists({ limit: 50, time_range: \"long_term\" }).then(\r\n      function (data) {\r\n        setSortedArtists(\r\n          data.body.items.map(function (artist) {\r\n            const largestAlbumImage = artist.images.reduce(function (\r\n              largest,\r\n              image\r\n            ) {\r\n              if (image.height > largest.height) {\r\n                return image;\r\n              } else {\r\n                return largest;\r\n              }\r\n            },\r\n            artist.images[0]);\r\n\r\n            return {\r\n              name: artist.name,\r\n              popularity: artist.popularity,\r\n              uri: artist.uri,\r\n              image: largestAlbumImage.url,\r\n              index: data.body.items.indexOf(artist) + 1,\r\n              genres: artist.genres,\r\n            };\r\n          })\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken, artistsDuration]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      return;\r\n    }\r\n\r\n    spotifyApi.getMe().then(\r\n      function (data) {\r\n        var user = data.body;\r\n        setUserDetails({\r\n          name: user.display_name,\r\n          image: user.images[0].url,\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n\r\n  const handleRefresh = () => {\r\n    if (!accessToken) return;\r\n\r\n    var temp = [];\r\n    var tempIds = [];\r\n    while (temp.length < 5) {\r\n      var randomArtist = topArtists[generateRandom(0, 49)];\r\n      if (temp.indexOf(randomArtist) === -1) {\r\n        temp.push(randomArtist);\r\n        tempIds.push(getArtistId(randomArtist.uri));\r\n      }\r\n    }\r\n\r\n    setPickedArtists(temp);\r\n    setPickedArtistsIds(tempIds);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleRefresh();\r\n  }, [topArtists]);\r\n\r\n  const handlePlaylistBtn = () => {\r\n    // Create a public playlist\r\n    spotifyApi\r\n      .createPlaylist(\"Favourites Mixtape\", {\r\n        description: `Playlist based on ${pickedArtists[0].name}, ${pickedArtists[1].name}, ${pickedArtists[2].name}, ${pickedArtists[3].name} and ${pickedArtists[4].name}`,\r\n        public: true,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          setPlaylistId(data.body.id);\r\n          console.log(\"Created playlist!\");\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n\r\n    //Get Recommendations Based on Seeds\r\n    spotifyApi\r\n      .getRecommendations({\r\n        min_energy: 0.4,\r\n        seed_artists: pickedArtistsIds,\r\n        min_popularity: 50,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          let recommendations = data.body;\r\n          console.log(recommendations);\r\n          setRecommendations(\r\n            data.body.tracks.map(function (track) {\r\n              return track.uri;\r\n            })\r\n          );\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(playlistId);\r\n    console.log(recommendations);\r\n    if (playlistId !== \"\") {\r\n      addTracks();\r\n    }\r\n  }, [recommendations]);\r\n\r\n  const addTracks = () => {\r\n    // Add tracks to a playlist\r\n    spotifyApi.addTracksToPlaylist(playlistId, recommendations).then(\r\n      function (data) {\r\n        if (data.statusCode === 201) {\r\n          setOpen(true);\r\n          console.log(\"Added tracks to playlist!\");\r\n        }\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"main-container\">\r\n      <UserIcon user={userDetails} />\r\n      <h1>\r\n        Your top tracks of <DropDownTracks changeSelect={changeSelect} />\r\n      </h1>\r\n\r\n      <div className=\"grid-container\">\r\n        {screenWidth < 660 &&\r\n          screenWidth > 460 &&\r\n          topTracks\r\n            .slice(0, 2)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {screenWidth < 860 &&\r\n          screenWidth >= 660 &&\r\n          topTracks\r\n            .slice(0, 3)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {screenWidth < 1100 &&\r\n          screenWidth >= 860 &&\r\n          topTracks\r\n            .slice(0, 4)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {(screenWidth >= 1100 || screenWidth <= 460) &&\r\n          topTracks\r\n            .slice(0, 5)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n      </div>\r\n      <div className=\" grid-container grid-container-tracks\">\r\n        {screenWidth < 660 &&\r\n          screenWidth > 460 &&\r\n          topTracks\r\n            .slice(2, 51)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {screenWidth < 860 &&\r\n          screenWidth >= 660 &&\r\n          topTracks\r\n            .slice(3, 51)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {screenWidth < 1100 &&\r\n          screenWidth >= 860 &&\r\n          topTracks\r\n            .slice(4, 51)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n        {(screenWidth >= 1100 || screenWidth <= 460) &&\r\n          topTracks\r\n            .slice(5, 51)\r\n            .map((track) => <TopTrack track={track} key={track.uri} />)}\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button type=\"button\" className=\"expand-btn-tracks\">\r\n          See More\r\n        </button>\r\n      </div>\r\n      <h1>\r\n        Your top artists of{\" \"}\r\n        <DropDownArtists handleChangeArtist={handleChangeArtist} />\r\n      </h1>\r\n      <div className=\"grid-container \">\r\n        {screenWidth < 660 &&\r\n          screenWidth > 460 &&\r\n          topArtists\r\n            .slice(0, 1)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {screenWidth < 860 &&\r\n          screenWidth >= 660 &&\r\n          topArtists\r\n            .slice(0, 2)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {screenWidth < 1100 &&\r\n          screenWidth >= 860 &&\r\n          topArtists\r\n            .slice(0, 3)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {(screenWidth >= 1100 || screenWidth <= 460) &&\r\n          topArtists\r\n            .slice(0, 4)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n\r\n        <div className=\"text-container\">\r\n          {artistsDuration === \"medium_term\" && (\r\n            <h3>\r\n              You listen to a lot of\r\n              <strong>{\" \" + topArtist + \" \"}</strong>\r\n            </h3>\r\n          )}\r\n          {artistsDuration === \"long_term\" && (\r\n            <h3>\r\n              Your top artist of all time is\r\n              <strong>{\" \" + topArtist + \" \"}</strong>\r\n            </h3>\r\n          )}\r\n          {artistsDuration === \"short_term\" && (\r\n            <h3>\r\n              You've been listening to a lot of\r\n              <strong>{\" \" + secondTopArtist + \" \"}</strong>\r\n              lately\r\n            </h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"grid-container  grid-container-artists\">\r\n        {screenWidth < 660 &&\r\n          screenWidth > 460 &&\r\n          topArtists\r\n            .slice(1, 49)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {screenWidth < 860 &&\r\n          screenWidth >= 660 &&\r\n          topArtists\r\n            .slice(2, 49)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {screenWidth < 1100 &&\r\n          screenWidth >= 860 &&\r\n          topArtists\r\n            .slice(3, 49)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n        {(screenWidth >= 1100 || screenWidth) < 460 &&\r\n          topArtists\r\n            .slice(4, 49)\r\n            .map((artist) => <TopArtist artist={artist} key={artist.uri} />)}\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button type=\"button\" className=\"expand-btn-artists\">\r\n          See More\r\n        </button>\r\n      </div>\r\n      <UniqueMusic sortedTracks={sortedTracks} sortedArtists={sortedArtists} />\r\n      <GeneratePlaylist\r\n        handlePlaylistBtn={handlePlaylistBtn}\r\n        pickedArtists={pickedArtists}\r\n        handleRefresh={handleRefresh}\r\n      />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        message=\"A new playlist has been added. Check out your Spotify!\"\r\n        ContentProps={{\r\n          sx: {\r\n            background: \"#4e527e\",\r\n          },\r\n        }}\r\n      />\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [refreshToken, setRefreshToken] = useState();\r\n  const [expiresIn, setExpiresIn] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"https://topify-web.herokuapp.com/login\", {\r\n        code,\r\n      })\r\n      .then(function (res) {\r\n        setAccessToken(res.data.accessToken);\r\n        setRefreshToken(res.data.refreshToken);\r\n        setExpiresIn(res.data.expiresIn);\r\n\r\n        //remove the code section from the url\r\n        window.history.pushState({}, null, \"/\");\r\n      })\r\n      .catch(() => {\r\n        //catch any errors\r\n        window.location = \"/\";\r\n      });\r\n  }, [code]);\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!refreshToken || !expiresIn) return;\r\n\r\n      const interval = setInterval(() => {\r\n        axios\r\n          .post(\"https://topify-web.herokuapp.com/refresh\", {\r\n            refreshToken,\r\n          })\r\n          .then(function (res) {\r\n            setAccessToken(res.data.accessToken);\r\n            setExpiresIn(res.data.expiresIn);\r\n          })\r\n          .catch(() => {\r\n            window.location = \"/\";\r\n          });\r\n        //one minute before 1 hour\r\n      }, (expiresIn - 60) * 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    },\r\n    [refreshToken, expiresIn]\r\n  );\r\n\r\n  return accessToken;\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./Login\";\nimport HomePage from \"./HomePage\";\n\n//getting the code from the URI\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  return code ? (\n    <div>\n      <HomePage code={code} />\n    </div>\n  ) : (\n    <Login />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}